{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Bhuvan R\\\\Documents\\\\GitHub\\\\react-firechat\\\\src\\\\components\\\\Channel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase/app';\nimport { useFirestoreQuery } from '../hooks'; // Components\n\nimport Message from './Message';\n\nconst Channel = ({\n  user = null\n}) => {\n  _s();\n\n  var _messages$sort;\n\n  const db = firebase.firestore();\n  const messagesRef = db.collection('messages');\n  const messages = useFirestoreQuery(messagesRef.orderBy('createdAt', 'desc').limit(100));\n  const [newMessage, setNewMessage] = useState('');\n  const inputRef = useRef();\n  const bottomListRef = useRef();\n  const {\n    uid,\n    displayName,\n    photoURL\n  } = user;\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [inputRef]);\n\n  const handleOnChange = e => {\n    setNewMessage(e.target.value);\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    const trimmedMessage = newMessage.trim();\n\n    if (trimmedMessage) {\n      // Add new message in Firestore\n      messagesRef.add({\n        text: editorState,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n        displayName,\n        photoURL\n      }); // Clear input field\n\n      setNewMessage(''); // Scroll down to the bottom of the list\n\n      bottomListRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-auto h-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-4 max-w-screen-lg mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-b dark:border-gray-600 border-gray-200 py-8 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-bold text-3xl text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-1\",\n              children: \"Welcome to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-3\",\n              children: \"React ChatApp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 text-center\",\n            children: \"This is the beginning of this chat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: messages === null || messages === void 0 ? void 0 : (_messages$sort = messages.sort((first, second) => {\n            var _first$createdAt, _second$createdAt;\n\n            return (first === null || first === void 0 ? void 0 : (_first$createdAt = first.createdAt) === null || _first$createdAt === void 0 ? void 0 : _first$createdAt.seconds) <= (second === null || second === void 0 ? void 0 : (_second$createdAt = second.createdAt) === null || _second$createdAt === void 0 ? void 0 : _second$createdAt.seconds) ? -1 : 1;\n          })) === null || _messages$sort === void 0 ? void 0 : _messages$sort.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Message, { ...message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: bottomListRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 mx-4\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleOnSubmit,\n        className: \"flex flex-row bg-gray-200 dark:bg-coolDark-400 rounded-md px-4 py-3 z-10 max-w-screen-lg mx-auto dark:text-white shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"text\",\n          value: newMessage,\n          onChange: handleOnChange,\n          placeholder: \"Type your message here...\",\n          className: \"flex-1 bg-transparent outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !newMessage,\n          className: \"uppercase font-semibold text-sm tracking-wider text-gray-500 hover:text-gray-900 dark:hover:text-white transition-colors\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Channel, \"exxsUaKJUcH3RJS83VI6gHiYwPk=\", false, function () {\n  return [useFirestoreQuery];\n});\n\n_c = Channel;\nChannel.propTypes = {\n  user: PropTypes.shape({\n    uid: PropTypes.string,\n    displayName: PropTypes.string,\n    photoURL: PropTypes.string\n  })\n};\nexport default Channel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"sources":["C:/Users/Bhuvan R/Documents/GitHub/react-firechat/src/components/Channel.js"],"names":["React","useEffect","useState","useRef","PropTypes","firebase","useFirestoreQuery","Message","Channel","user","db","firestore","messagesRef","collection","messages","orderBy","limit","newMessage","setNewMessage","inputRef","bottomListRef","uid","displayName","photoURL","current","focus","handleOnChange","e","target","value","handleOnSubmit","preventDefault","trimmedMessage","trim","add","text","editorState","createdAt","FieldValue","serverTimestamp","scrollIntoView","behavior","sort","first","second","seconds","map","message","id","propTypes","shape","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase/app';\r\nimport { useFirestoreQuery } from '../hooks';\r\n// Components\r\nimport Message from './Message';\r\n\r\nconst Channel = ({ user = null }) => {\r\n  const db = firebase.firestore();\r\n  const messagesRef = db.collection('messages');\r\n  const messages = useFirestoreQuery(\r\n    messagesRef.orderBy('createdAt', 'desc').limit(100)\r\n  );\r\n\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  const inputRef = useRef();\r\n  const bottomListRef = useRef();\r\n\r\n  const { uid, displayName, photoURL } = user;\r\n\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [inputRef]);\r\n\r\n  const handleOnChange = e => {\r\n    setNewMessage(e.target.value);\r\n  };\r\n\r\n  const handleOnSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const trimmedMessage = newMessage.trim();\r\n    if (trimmedMessage) {\r\n      // Add new message in Firestore\r\n      messagesRef.add({\r\n        text: editorState,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid,\r\n        displayName,\r\n        photoURL,\r\n      });\r\n      // Clear input field\r\n      setNewMessage('');\r\n      // Scroll down to the bottom of the list\r\n      bottomListRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full\">\r\n      <div className=\"overflow-auto h-full\">\r\n        <div className=\"py-4 max-w-screen-lg mx-auto\">\r\n          <div className=\"border-b dark:border-gray-600 border-gray-200 py-8 mb-4\">\r\n            <div className=\"font-bold text-3xl text-center\">\r\n              <p className=\"mb-1\">Welcome to</p>\r\n              <p className=\"mb-3\">React ChatApp</p>\r\n            </div>\r\n            <p className=\"text-gray-400 text-center\">\r\n              This is the beginning of this chat.\r\n            </p>\r\n          </div>\r\n          <ul>\r\n            {messages\r\n              ?.sort((first, second) =>\r\n                first?.createdAt?.seconds <= second?.createdAt?.seconds ? -1 : 1\r\n              )\r\n              ?.map(message => (\r\n                <li key={message.id}>\r\n                  <Message {...message} />\r\n                </li>\r\n              ))}\r\n          </ul>\r\n          <div ref={bottomListRef} />\r\n        </div>\r\n      </div>\r\n      <div className=\"mb-6 mx-4\">\r\n        <form\r\n          onSubmit={handleOnSubmit}\r\n          className=\"flex flex-row bg-gray-200 dark:bg-coolDark-400 rounded-md px-4 py-3 z-10 max-w-screen-lg mx-auto dark:text-white shadow-md\"\r\n        >\r\n          <input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={handleOnChange}\r\n            placeholder=\"Type your message here...\"\r\n            className=\"flex-1 bg-transparent outline-none\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!newMessage}\r\n            className=\"uppercase font-semibold text-sm tracking-wider text-gray-500 hover:text-gray-900 dark:hover:text-white transition-colors\"\r\n          >\r\n            Send\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nChannel.propTypes = {\r\n  user: PropTypes.shape({\r\n    uid: PropTypes.string,\r\n    displayName: PropTypes.string,\r\n    photoURL: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Channel;\r\n"]},"metadata":{},"sourceType":"module"}